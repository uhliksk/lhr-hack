$gpu=0; $lowpowermode=$false;
$apiget="http://localhost:18000/api?command={%22id%22:1,%22method%22:%22device.get%22,%22params%22:[%22$gpu%22]}";
$lfr=210; $mfr=540; $hfr=1230;
nvidia-smi.exe -i $gpu -lmc 10000 | Out-Null;
$ProgressPreference='SilentlyContinue'; $ErrorActionPreference='SilentlyContinue';
$incorrect=$true; nvidia-smi.exe -i $gpu -lgc $lfr | Out-Null; while ($incorrect) { Write-Host -ForegroundColor cyan ((get-date -f "dd.MM.yyyy HH:mm:ss")+" "+"Autotune low frequency to $lfr MHz"); sleep -m 3000; $clockcore=((wget "$apiget").Content | ConvertFrom-Json).device.gpu_clock_core; if ($clockcore -gt 240) { $diff=-30*[Math]::Round(($clockcore-$lfr)/30); Write-Host -ForegroundColor red "Idle core clock too high. Set GPU Core Clock to $diff MHz above the current GPU Core Clock setting."; }; if ($clockcore -le 240) { $incorrect=$false; }; if ($clockcore -le 210) { Write-Host -ForegroundColor red "Bad Core Clock reading. Make sure the Excavator is running."; $incorrect=$true; }; };
$threshold=29; $memutil=$threshold+1; while ($memutil -ge $threshold) { Write-Host -ForegroundColor yellow ((get-date -f "dd.MM.yyyy HH:mm:ss")+" "+"Autotune memory clock"); sleep -m 3000; $memutil=((wget "$apiget").Content | ConvertFrom-Json).device.gpu_load_memctrl; if ($memutil -ge 30) { Write-Host -ForegroundColor red "Memory Clock is too low for automatic LHR unlock. Set Memory Clock higher." }; };
$threshold=58; $memutil=$threshold+1; while ($memutil -ge $threshold) { Write-Host -ForegroundColor green ((get-date -f "dd.MM.yyyy HH:mm:ss")+" "+"Autotune medium frequency to $mfr MHz"); nvidia-smi.exe -i $gpu -lgc $mfr | Out-Null; sleep -m 3000; $memutil=((wget "$apiget").Content | ConvertFrom-Json).device.gpu_load_memctrl; if ($memutil -ge $threshold) { $mfr-=30; }; if ($memutil -lt 30) { $memutil=$threshold+1; }; };
nvidia-smi.exe -i $gpu -rgc | Out-Null; sleep -m 8000; $fawlocked=((wget "$apiget").Content | ConvertFrom-Json).device.gpu_memory_timings.timings.FAW;
$faw=$fawlocked; nvidia-smi.exe -i $gpu -lgc $lfr | Out-Null; while ($faw -eq $fawlocked) { Write-Host -ForegroundColor blue ((get-date -f "dd.MM.yyyy HH:mm:ss")+" "+"Waiting for LHR unlock."); sleep -m 3000; $faw=((wget "$apiget").Content | ConvertFrom-Json).device.gpu_memory_timings.timings.FAW; };
$fawunlocked=$faw;
if ($lowpowermode) { $hfr=810; $threshold=99; $memutil=$threshold-1; while ($memutil -le $threshold) { Write-Host -ForegroundColor white ((get-date -f "dd.MM.yyyy HH:mm:ss")+" "+"Autotune high frequency to $hfr MHz"); nvidia-smi.exe -i $gpu -lgc $hfr | Out-Null; sleep -m 2000; $memutil=((wget "$apiget").Content | ConvertFrom-Json).device.gpu_load_memctrl; nvidia-smi.exe -i $gpu -lgc $lfr | Out-Null; sleep -m 6000; if ($memutil -le $threshold) { $hfr+=30; }; if ($memutil -lt 30) { $memutil=$threshold+1; }; }; };
$cycle=7.997; $boost=4; $lasttime=[Math]::Round((Get-Date).ToFileTimeUTC()/10000); $looptime=$lasttime; $nextfaw=0; $lastfaw=0; $skip=0; while ($true) { $now=[Math]::Round((Get-Date).ToFileTimeUTC()/10000); if (($faw -eq $fawlocked) -Or ((($now-$lasttime)/1000) -ge $nextfaw)) { $faw=((wget "$apiget").Content | ConvertFrom-Json).device.gpu_memory_timings.timings.FAW; $nextfaw+=2.3; }; if ($faw -ne $lastfaw) { (get-date -f "dd.MM.yyyy HH:mm:ss")+" "+$lastfaw+" -> "+$faw+" @ "+($now-$lasttime)/1000+" ("+($now-$looptime)/1000+")"; if ($lastfaw -eq $fawlocked) { $lasttime=$now; $nextfaw=0; $skip=0; } else { $lasttime+=$cycle*1000; }; $lastfaw=$faw; if ($faw -eq $fawunlocked) { nvidia-smi.exe -i $gpu -lgc $hfr | Out-Null; }; if ($faw -eq $fawlocked) { $looptime=$now; nvidia-smi.exe -i $gpu -lgc $lfr | Out-Null; }; }; if (($faw -eq $fawunlocked) -And ((($now-$lasttime)/1000) -ge ($boost+$skip))) { $skip=$cycle; nvidia-smi.exe -i $gpu -lgc $mfr | Out-Null; Write-Host (("Boost: "+$boost+" @ "+($now-$lasttime)/1000)+" ("+($now-$looptime)/1000+")"); sleep -m 100; }; if (($faw -eq $fawunlocked) -And ((($now-$lasttime)/1000) -ge $cycle)) { $lastfaw++; $nextfaw=0; $skip=0; }; sleep -m 10; };
